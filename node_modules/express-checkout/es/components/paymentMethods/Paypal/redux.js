var _createReducer, _createReducer2, _createReducer3, _createReducer4, _createReducer5;

import { createReducer, createAction } from "@reduxjs/toolkit";

var initialStringState = "";
var initialObjectState = {};

var storePaypalStatus = createAction("STOREPAYPALSTATUS");
var paypalStatus = createReducer(initialStringState, (_createReducer = {}, _createReducer[storePaypalStatus] = function (state, action) {
    return action.payload;
}, _createReducer));
var storePaypalPaymentID = createAction("STOREPAYPALPAYMENTID");
var paymentID = createReducer(initialStringState, (_createReducer2 = {}, _createReducer2[storePaypalPaymentID] = function (state, action) {
    return action.payload;
}, _createReducer2));
var storePaypalPreset = createAction("STOREPAYPALPRESET");
var preset = createReducer(initialObjectState, (_createReducer3 = {}, _createReducer3[storePaypalPreset] = function (state, action) {
    return action.payload;
}, _createReducer3));
var storePaypalCancelData = createAction("STOREPAYPALCANCELDATA");
var cancelData = createReducer(initialObjectState, (_createReducer4 = {}, _createReducer4[storePaypalCancelData] = function (state, action) {
    return action.payload;
}, _createReducer4));
var storePaypalError = createAction("STOREPAYPALERROR");
var error = createReducer(initialObjectState, (_createReducer5 = {}, _createReducer5[storePaypalError] = function (state, action) {
    return action.payload;
}, _createReducer5));

export { paypalStatus, paymentID, preset, cancelData, error, storePaypalStatus, storePaypalPaymentID, storePaypalPreset, storePaypalCancelData, storePaypalError };