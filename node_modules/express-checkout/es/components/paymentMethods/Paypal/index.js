import React from "react";
import { useSelector, connect } from "react-redux";
import find from "lodash/find";
import PaypalButton from "./PaypalButton";
import { paymentAction, authorizeAction, cancelAction } from "./actions.redux";
/**
 * Prepare Paypal button needed props
 * @param {Object} params
 * @param {Object} params.initialConfiguration
 * @param {Object} params.listConfiguration
 * @param {Object} params.props
 */
var prepareButtonProps = function prepareButtonProps(_ref) {
    var initialConfiguration = _ref.initialConfiguration,
        listConfiguration = _ref.listConfiguration,
        props = _ref.props;
    var style = initialConfiguration.style,
        locale = initialConfiguration.locale;
    var _listConfiguration$co = listConfiguration.contractData,
        PAGE_ENVIRONMENT = _listConfiguration$co.PAGE_ENVIRONMENT,
        PAGE_BUTTON_LOCALE = _listConfiguration$co.PAGE_BUTTON_LOCALE;

    return {
        style: style,
        locale: PAGE_BUTTON_LOCALE || locale,
        commit: false,
        env: PAGE_ENVIRONMENT,
        payment: function payment() {
            return props.paymentAction({ customFunctions: props.customFunctions, createTransactionDetails: props.createTransactionDetails });
        },
        onAuthorize: function onAuthorize(data) {
            return props.authorizeAction({ customFunctions: props.customFunctions, data: data });
        },
        onCancel: function onCancel(data) {
            return props.cancelAction({ customFunctions: props.customFunctions, data: data });
        }
    };
};
/**
 * Paypal main component
 * @param {Object} props
 * @return {JSX.Element}
 */
var Paypal = function Paypal(props) {
    var initialConfiguration = useSelector(function (state) {
        return find(state.configuration.paymentMethodsConfiguration, function (item) {
            return item.code === "PAYPAL";
        });
    });
    var listConfiguration = useSelector(function (state) {
        return find(state.list.data, function (item) {
            return item.code === "PAYPAL";
        });
    });

    var buttonProps = prepareButtonProps({ initialConfiguration: initialConfiguration, listConfiguration: listConfiguration, props: props });
    return React.createElement(
        "div",
        { "test-id": "paypal-button-container" },
        React.createElement(PaypalButton, buttonProps)
    );
};

Paypal.propTypes = process.env.NODE_ENV !== "production" ? {} : {};

export default connect(null, { paymentAction: paymentAction, authorizeAction: authorizeAction, cancelAction: cancelAction })(Paypal);