var _createReducer, _createReducer2, _createReducer3, _createReducer4, _createReducer5, _createReducer6;

import { createReducer, createAction } from "@reduxjs/toolkit";

var initialBooleanState = false;
var initialObjectState = {};

var setPresetAccountLoading = createAction("PRESETACCOUNTLOADING");
var presetAccountLoading = createReducer(initialBooleanState, (_createReducer = {}, _createReducer[setPresetAccountLoading] = function (state, action) {
    return action.payload;
}, _createReducer));

var setPresetAccountError = createAction("PRESETACCOUNTERROR");
var presetAccountError = createReducer(initialObjectState, (_createReducer2 = {}, _createReducer2[setPresetAccountError] = function (state, action) {
    return action.payload;
}, _createReducer2));

var storePresetAccount = createAction("PRESETACCOUNT");
var presetAccount = createReducer(initialObjectState, (_createReducer3 = {}, _createReducer3[storePresetAccount] = function (state, action) {
    return action.payload;
}, _createReducer3));

var setConfirmAccountLoading = createAction("CONFIRMACCOUNTLOADING");
var confirmAccountLoading = createReducer(initialBooleanState, (_createReducer4 = {}, _createReducer4[setConfirmAccountLoading] = function (state, action) {
    return action.payload;
}, _createReducer4));

var setConfirmAccountError = createAction("CONFIRMACCOUNTERROR");
var confirmAccountError = createReducer(initialObjectState, (_createReducer5 = {}, _createReducer5[setConfirmAccountError] = function (state, action) {
    return action.payload;
}, _createReducer5));

var storeConfirmAccount = createAction("CONFIRMACCOUNT");
var confirmAccount = createReducer(initialObjectState, (_createReducer6 = {}, _createReducer6[storeConfirmAccount] = function (state, action) {
    return action.payload;
}, _createReducer6));

export { setPresetAccountLoading, presetAccountLoading, setPresetAccountError, presetAccountError, storePresetAccount, presetAccount, setConfirmAccountLoading, confirmAccountLoading, setConfirmAccountError, confirmAccountError, storeConfirmAccount, confirmAccount };