"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require("react-redux");

var _hook = require("./hook");

var _Paypal = require("../paymentMethods/Paypal");

var _Paypal2 = _interopRequireDefault(_Paypal);

var _Amazon = require("../paymentMethods/Amazon");

var _Amazon2 = _interopRequireDefault(_Amazon);

var _map = require("lodash/map");

var _map2 = _interopRequireDefault(_map);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Load Payment Method By Code
 * @param {String} code
 * @param {Object} bindingProps
 */
var loadPaymentMethodByCode = function loadPaymentMethodByCode(code, bindingProps, index) {
    switch (code) {
        case "PAYPAL":
            return _react2.default.createElement(_Paypal2.default, _extends({}, bindingProps, { key: "PAYPAL_" + index }));
        case "AMAZONPAY":
            return _react2.default.createElement(_Amazon2.default, _extends({}, bindingProps, { key: "AMAZONPAY_" + index }));
        default:
            return null;
    }
};

/**
 * Payments Container
 * render the list of payment methods depends on value from state
 * @param {Object} props
 * @return {JSX.Element}
 */
var PaymentsContainer = function PaymentsContainer(props) {
    var listOfPaymentMethods = (0, _reactRedux.useSelector)(function (state) {
        return state.list.data;
    });
    (0, _hook.useList)(props.customFunctions);
    return _react2.default.createElement(
        "div",
        { "test-id": "payments-container" },
        listOfPaymentMethods && (0, _map2.default)(listOfPaymentMethods, function (method, i) {
            return loadPaymentMethodByCode(method.code, props, i);
        })
    );
};

PaymentsContainer.propTypes = process.env.NODE_ENV !== "production" ? {} : {};

exports.default = PaymentsContainer;
module.exports = exports["default"];