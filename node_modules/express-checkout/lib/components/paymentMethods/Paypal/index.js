"use strict";

exports.__esModule = true;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require("react-redux");

var _find = require("lodash/find");

var _find2 = _interopRequireDefault(_find);

var _PaypalButton = require("./PaypalButton");

var _PaypalButton2 = _interopRequireDefault(_PaypalButton);

var _actions = require("./actions.redux");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Prepare Paypal button needed props
 * @param {Object} params
 * @param {Object} params.initialConfiguration
 * @param {Object} params.listConfiguration
 * @param {Object} params.props
 */
var prepareButtonProps = function prepareButtonProps(_ref) {
    var initialConfiguration = _ref.initialConfiguration,
        listConfiguration = _ref.listConfiguration,
        props = _ref.props;
    var style = initialConfiguration.style,
        locale = initialConfiguration.locale;
    var _listConfiguration$co = listConfiguration.contractData,
        PAGE_ENVIRONMENT = _listConfiguration$co.PAGE_ENVIRONMENT,
        PAGE_BUTTON_LOCALE = _listConfiguration$co.PAGE_BUTTON_LOCALE;

    return {
        style: style,
        locale: PAGE_BUTTON_LOCALE || locale,
        commit: false,
        env: PAGE_ENVIRONMENT,
        payment: function payment() {
            return props.paymentAction({ customFunctions: props.customFunctions, createTransactionDetails: props.createTransactionDetails });
        },
        onAuthorize: function onAuthorize(data) {
            return props.authorizeAction({ customFunctions: props.customFunctions, data: data });
        },
        onCancel: function onCancel(data) {
            return props.cancelAction({ customFunctions: props.customFunctions, data: data });
        }
    };
};
/**
 * Paypal main component
 * @param {Object} props
 * @return {JSX.Element}
 */
var Paypal = function Paypal(props) {
    var initialConfiguration = (0, _reactRedux.useSelector)(function (state) {
        return (0, _find2.default)(state.configuration.paymentMethodsConfiguration, function (item) {
            return item.code === "PAYPAL";
        });
    });
    var listConfiguration = (0, _reactRedux.useSelector)(function (state) {
        return (0, _find2.default)(state.list.data, function (item) {
            return item.code === "PAYPAL";
        });
    });

    var buttonProps = prepareButtonProps({ initialConfiguration: initialConfiguration, listConfiguration: listConfiguration, props: props });
    return _react2.default.createElement(
        "div",
        { "test-id": "paypal-button-container" },
        _react2.default.createElement(_PaypalButton2.default, buttonProps)
    );
};

Paypal.propTypes = process.env.NODE_ENV !== "production" ? {} : {};

exports.default = (0, _reactRedux.connect)(null, { paymentAction: _actions.paymentAction, authorizeAction: _actions.authorizeAction, cancelAction: _actions.cancelAction })(Paypal);
module.exports = exports["default"];