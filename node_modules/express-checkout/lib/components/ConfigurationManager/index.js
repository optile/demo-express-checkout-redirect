"use strict";

exports.__esModule = true;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _redux = require("./redux");

var _reactRedux = require("react-redux");

var _PaymentsContainer = require("../PaymentsContainer");

var _PaymentsContainer2 = _interopRequireDefault(_PaymentsContainer);

var _PaymentsSummaryContainer = require("../PaymentsSummaryContainer");

var _PaymentsSummaryContainer2 = _interopRequireDefault(_PaymentsSummaryContainer);

var _GlobalError = require("../GlobalError");

var _GlobalError2 = _interopRequireDefault(_GlobalError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Configuration Manager
 * The main component to render express checkout widget
 * @param {Object} props
 * @param {Object} props.configuration
 * @param {Function} props.createTransactionDetails
 * @param {Object} props.customFunctions
 * @param {String} props.mode
 * @param {String} props.longId
 * @return {JSX.Element}
 */
var ConfigurationManager = function ConfigurationManager(props) {
    var dispatch = (0, _reactRedux.useDispatch)();
    var mode = (0, _reactRedux.useSelector)(function (state) {
        return state.mode;
    });
    var globalError = (0, _reactRedux.useSelector)(function (state) {
        return state.globalError;
    });
    var displayGlobalError = (0, _reactRedux.useSelector)(function (state) {
        return state.displayGlobalError;
    });

    (0, _react.useEffect)(function () {
        dispatch((0, _redux.storeConfiguration)(props.configuration));
        dispatch((0, _redux.storeMode)(props.mode));
        dispatch((0, _redux.storeLongId)(props.longId));
    }, [props.longId, props.mode]);

    if (displayGlobalError) {
        return _react2.default.createElement(_GlobalError2.default, { message: globalError });
    }

    return mode === "Summary" ? _react2.default.createElement(_PaymentsSummaryContainer2.default, props) : _react2.default.createElement(_PaymentsContainer2.default, props);
};

ConfigurationManager.propTypes = process.env.NODE_ENV !== "production" ? {
    configuration: _propTypes2.default.object.isRequired,
    createTransactionDetails: _propTypes2.default.func.isRequired,
    customFunctions: _propTypes2.default.object,
    mode: _propTypes2.default.string,
    longId: _propTypes2.default.string
} : {};

exports.default = ConfigurationManager;
module.exports = exports["default"];